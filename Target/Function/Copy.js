var b=async(f={})=>{const{Asset:c=[],Copy:d=!1,Glob:m={},Verbose:w=!1,Once:y=!1,Resolve:a="out",Dry:n=!1}=f,o=n===!0||w,p=(await import("@Function/Format.js")).default(c),h=d?"onStart":"onEnd";return{name:"@playform/copy",setup(i){i[h](async()=>{if(y&&process.env[u]==="true"){s(`Copy plugin skipped as option ${e.white("Once")} set to true`,o);return}if(!p.length)return;let r;if(a==="cwd")r=process.cwd();else if(a==="out"){const t=i.initialOptions.outdir??(await import("path")).dirname(i.initialOptions.outfile);if(!t){s(e.red(`You should provide valid ${e.white("outdir")} or ${e.white("outfile")} for assets copy. received outdir:${i.initialOptions.outdir}, received outfile:${i.initialOptions.outfile}`),o);return}r=t}else r=a;s(`Resolve assert pair to path from: ${(await import("path")).resolve(r)}`,o);for(const{from:t,to:g}of p){const l=[...new Set(await(await import("fast-glob")).default(t,{onlyFiles:!0,...m}))];l.length||s(`No files matched using current glob pattern: ${e.white(t)}, maybe you need to configure fast-glob by ${e.white("options.Glob")}?`,o);for(const v of l)g.forEach(O=>{$(r,t,v,O,o,n)});process.env[u]="true"}})}}};const u="esbuild_copy_executed",{default:e}=await import("chalk"),{default:s}=await import("@Function/Log.js"),{default:$}=await import("@Function/Handle.js");export{e as Chalk,$ as Handle,s as Log,u as PLUGIN_EXECUTED_FLAG,b as default};
